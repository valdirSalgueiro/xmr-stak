<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{3561CACF-A79D-3785-BAFB-0F82C532F462}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.16299.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>ZERO_CHECK</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\.;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.1\include;C:\Users\vns\Downloads\xmr-stak-dep\libmicrohttpd\include;C:\Users\vns\Downloads\xmr-stak-dep\openssl\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\.;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.1\include;C:\Users\vns\Downloads\xmr-stak-dep\libmicrohttpd\include;C:\Users\vns\Downloads\xmr-stak-dep\openssl\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\.;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.1\include;C:\Users\vns\Downloads\xmr-stak-dep\libmicrohttpd\include;C:\Users\vns\Downloads\xmr-stak-dep\openssl\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\.;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.1\include;C:\Users\vns\Downloads\xmr-stak-dep\libmicrohttpd\include;C:\Users\vns\Downloads\xmr-stak-dep\openssl\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\ada99bc6706a3a330e6fc0f17ad1cb2a\generate.stamp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -HC:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f -BC:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f/build/xmr-stak.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f/build/CMakeFiles/ada99bc6706a3a330e6fc0f17ad1cb2a/generate.stamp.rule;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakePushCheckState.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindCUDA.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindCUDA\run_nvcc.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindCUDA\select_compute_arch.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindOpenCL.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindOpenSSL.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\SelectLibraryConfigurations.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\CMakeLists.txt;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeCCompiler.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeCXXCompiler.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeRCCompiler.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeSystem.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\xmrstak_cuda_backend.dir\xmrstak\backend\nvidia\nvcc_code\xmrstak_cuda_backend_generated_cuda_core.cu.obj.depend;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\xmrstak_cuda_backend.dir\xmrstak\backend\nvidia\nvcc_code\xmrstak_cuda_backend_generated_cuda_extra.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -HC:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f -BC:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f/build/xmr-stak.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f/build/CMakeFiles/ada99bc6706a3a330e6fc0f17ad1cb2a/generate.stamp.rule;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakePushCheckState.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindCUDA.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindCUDA\run_nvcc.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindCUDA\select_compute_arch.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindOpenCL.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindOpenSSL.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\SelectLibraryConfigurations.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\CMakeLists.txt;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeCCompiler.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeCXXCompiler.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeRCCompiler.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeSystem.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\xmrstak_cuda_backend.dir\xmrstak\backend\nvidia\nvcc_code\xmrstak_cuda_backend_generated_cuda_core.cu.obj.depend;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\xmrstak_cuda_backend.dir\xmrstak\backend\nvidia\nvcc_code\xmrstak_cuda_backend_generated_cuda_extra.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -HC:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f -BC:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f/build/xmr-stak.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f/build/CMakeFiles/ada99bc6706a3a330e6fc0f17ad1cb2a/generate.stamp.rule;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakePushCheckState.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindCUDA.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindCUDA\run_nvcc.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindCUDA\select_compute_arch.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindOpenCL.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindOpenSSL.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\SelectLibraryConfigurations.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\CMakeLists.txt;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeCCompiler.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeCXXCompiler.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeRCCompiler.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeSystem.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\xmrstak_cuda_backend.dir\xmrstak\backend\nvidia\nvcc_code\xmrstak_cuda_backend_generated_cuda_core.cu.obj.depend;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\xmrstak_cuda_backend.dir\xmrstak\backend\nvidia\nvcc_code\xmrstak_cuda_backend_generated_cuda_extra.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -HC:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f -BC:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f/build/xmr-stak.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/Users/vns/Downloads/xmr-stak-27e511a1e92e903414e176161925d87165cbe25f/build/CMakeFiles/ada99bc6706a3a330e6fc0f17ad1cb2a/generate.stamp.rule;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakePushCheckState.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindCUDA.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindCUDA\run_nvcc.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindCUDA\select_compute_arch.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindOpenCL.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindOpenSSL.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.11\Modules\SelectLibraryConfigurations.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\CMakeLists.txt;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeCCompiler.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeCXXCompiler.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeRCCompiler.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\3.11.0-rc1\CMakeSystem.cmake;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\xmrstak_cuda_backend.dir\xmrstak\backend\nvidia\nvcc_code\xmrstak_cuda_backend_generated_cuda_core.cu.obj.depend;C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\xmrstak_cuda_backend.dir\xmrstak\backend\nvidia\nvcc_code\xmrstak_cuda_backend_generated_cuda_extra.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\vns\Downloads\xmr-stak-27e511a1e92e903414e176161925d87165cbe25f\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>